import { __extends, __decorate, __param, __spread } from 'tslib';
import { InjectionToken, ChangeDetectorRef, ElementRef, Optional, Inject, Injectable, NgModule } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { ResizeObserver } from '@juggle/resize-observer';

var RESIZE_OBSERVER = new InjectionToken("Resize Observer", {
    providedIn: "root",
    factory: function () { return window.ResizeObserver || null; }
});

var NgResizeObserver = /** @class */ (function (_super) {
    __extends(NgResizeObserver, _super);
    function NgResizeObserver() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return NgResizeObserver;
}(Observable));
var ResizeObserverService = /** @class */ (function () {
    function ResizeObserverService(chgRef, el, ResizeObserver) {
        this.chgRef = chgRef;
        this.el = el;
        this.ResizeObserver = ResizeObserver;
        this.onResizeSubject = new Subject();
        this.onResize = this.onResizeSubject.asObservable();
        if (this.el === null) {
            console.error("ng-resize-observer: No provider for ElementRef. This error is most likely because you added the ng-resize-observer provider in a @NgModule. Only add ng-resize-observer on @Component()");
            return;
        }
        if (this.ResizeObserver === null) {
            console.error("ng-resize-observer: ResizeObserver not available. Use the ponyfill module: NgResizeObserverPonyfillModule.");
            return;
        }
        this.observe();
    }
    ResizeObserverService.prototype.ngOnDestroy = function () {
        this.unobserve();
        this.onResizeSubject.complete();
    };
    ResizeObserverService.prototype.observe = function () {
        var _this = this;
        this.resizeObserver = new this.ResizeObserver(function (entries) {
            var entry = entries && entries[0];
            if (entry) {
                _this.onResizeSubject.next(entry);
                _this.chgRef.detectChanges();
            }
        });
        this.resizeObserver.observe(this.target);
    };
    ResizeObserverService.prototype.unobserve = function () {
        this.resizeObserver.unobserve(this.target);
    };
    Object.defineProperty(ResizeObserverService.prototype, "target", {
        get: function () {
            return this.el.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    ResizeObserverService.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef, decorators: [{ type: Optional }] },
        { type: undefined, decorators: [{ type: Inject, args: [RESIZE_OBSERVER,] }] }
    ]; };
    ResizeObserverService = __decorate([
        Injectable(),
        __param(1, Optional()),
        __param(2, Inject(RESIZE_OBSERVER))
    ], ResizeObserverService);
    return ResizeObserverService;
}());
function ngResizeObserverFactory(resizeObserverService) {
    return resizeObserverService.onResize;
}
var NgResizeObserverProvider = {
    provide: NgResizeObserver,
    useFactory: ngResizeObserverFactory,
    deps: [ResizeObserverService],
};

function ponyFillFactory() {
    return window.ResizeObserver || ResizeObserver;
}
;
var polyfillProvider = { provide: RESIZE_OBSERVER, useFactory: ponyFillFactory };
var NgResizeObserverPonyfillModule = /** @class */ (function () {
    function NgResizeObserverPonyfillModule() {
    }
    NgResizeObserverPonyfillModule = __decorate([
        NgModule({
            providers: [polyfillProvider]
        })
    ], NgResizeObserverPonyfillModule);
    return NgResizeObserverPonyfillModule;
}());

var ngResizeObserverProviders = [
    NgResizeObserverProvider,
    ResizeObserverService
];
var ngResizeObserverProvidersWithPonyfill = __spread(ngResizeObserverProviders, [
    polyfillProvider
]);

/**
 * Generated bundle index. Do not edit.
 */

export { NgResizeObserver, NgResizeObserverPonyfillModule, ngResizeObserverProviders, ngResizeObserverProvidersWithPonyfill, ResizeObserverService as ɵa, ngResizeObserverFactory as ɵb, NgResizeObserverProvider as ɵc, ponyFillFactory as ɵd, polyfillProvider as ɵe, RESIZE_OBSERVER as ɵg };
//# sourceMappingURL=ng-resize-observer.js.map
