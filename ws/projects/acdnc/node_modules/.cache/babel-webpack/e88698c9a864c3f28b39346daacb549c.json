{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Lucas/Documents/GitHub/angular-common-directives-and-components/ws/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TCSSCompilerService {\n  constructor(http, rendererFactory) {\n    this.http = http;\n    this.render = rendererFactory.createRenderer(null, null);\n  }\n\n  setStyle(context, filePath) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let text = yield _this.http.get(filePath + '.acss', {\n        responseType: 'text'\n      }).toPromise();\n      let tabSize = 0;\n      if (text.substring(text.length - 1, text.length).charCodeAt(0) != 13) text += '\\n';\n      if (text.length == 0) return;\n\n      const blocks = _this.getBlocks(text);\n\n      blocks.forEach(b => {\n        const lines = b.split('\\n').filter(e => e.length > 0 && e.charCodeAt(0) != 13);\n        lines.forEach(l => {\n          if (b.includes(' use:')) {\n            const selector = b.substring(0, b.indexOf(' use:')).trim();\n            const identifier = selector.split('').filter(e => e == '$' || e == '.' || e == '#').join('');\n\n            if (identifier.length > 1) {\n              throw new Error(`${selector} is not a valid selector`);\n            } else {\n              const trimmedSelector = selector.replace(identifier, '');\n\n              if (identifier == '$') {\n                if (Object.keys(context).includes(trimmedSelector)) {\n                  const instructions = l.split(':');\n\n                  if (instructions[0].trim().length != instructions[0].length && tabSize == 0) {\n                    tabSize = instructions[0].length - instructions[0].trim().length;\n                  }\n\n                  const tabs = instructions[0].length - instructions[0].trim().length != 0 ? (instructions[0].length - instructions[0].trim().length) / tabSize : 0;\n\n                  if (!!tabs) {\n                    if (tabs % 2 != 0) {\n                      const atribute = !instructions[0].includes(' use') ? instructions[0].trim() : '';\n                      const value = instructions[1].length > 1 ? instructions[1].trim() : '';\n\n                      if (atribute && value) {\n                        const el = context[trimmedSelector].nativeElement;\n\n                        if (Object.keys(el.style).includes(atribute)) {\n                          el.style[atribute] = value;\n                        }\n                      }\n\n                      if (instructions[0].includes(' use')) {\n                        console.log(instructions[0]);\n                      }\n                    } else {\n                      console.log(instructions);\n                    }\n                  }\n                } else {\n                  throw new Error(`${trimmedSelector} is not a valid ViewChild`);\n                }\n              } else {}\n            }\n          }\n        });\n      });\n      return '';\n    })();\n  }\n\n  getBlocks(text) {\n    const blocks = [];\n    let index = 0;\n    let safe = 0; // while (text.length > 0 && safe < 10_000_000) {\n    //   if(blocks[index] == undefined) blocks[index] = ''\n    //   blocks[index] += text.substring(0, text.indexOf('\\n') + 1)\n    //   text = text.replace(text.substring(0, text.indexOf('\\n') + 1), '')\n    //   if(text.substring(0, 1).charCodeAt(0) == 13) index++\n    //   safe++\n    // }\n\n    const obj = {};\n    let tabSize = 0;\n    let lastKey = '';\n    text.split('\\n').forEach(l => {\n      if (l.includes(' use:')) {\n        l = l.split('').map(e => e.charCodeAt(0)).filter(e => e != 13).map(e => String.fromCharCode(e)).join('');\n        const selector = l.substring(0, l.indexOf(' use:'));\n        obj[selector] = {};\n        if (l.length != l.trim().length && tabSize == 0) tabSize = l.length - 1 - l.trim().length;\n\n        if (l.length != l.trim().length) {\n          console.log(lastKey);\n          const instructions = l.split(':').map(e => e.trim());\n          console.log(instructions);\n          const preObj = {};\n          preObj[selector] = {};\n\n          if (!!instructions[0]) {\n            obj[lastKey][instructions[0]] = instructions[1];\n          }\n        }\n\n        lastKey = selector;\n      } else {\n        const instructions = l.split(':').map(e => e.trim());\n        const preObj = {};\n\n        if (!!instructions[0]) {\n          preObj[instructions[0]] = instructions[1];\n          obj[lastKey] = Object.assign(Object.assign({}, obj[lastKey]), preObj);\n        }\n      }\n    });\n    console.log(obj); // console.log(blocks.forEach(e => {\n    //   console.log(e.lastIndexOf(' use') != e.indexOf(' use'))\n    // }))\n\n    return ['']; // return blocks\n  }\n\n}\n\nTCSSCompilerService.ɵfac = function TCSSCompilerService_Factory(t) {\n  return new (t || TCSSCompilerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i0.RendererFactory2));\n};\n\nTCSSCompilerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TCSSCompilerService,\n  factory: TCSSCompilerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\Lucas\\Documents\\GitHub\\angular-common-directives-and-components\\ws\\projects\\acdnc-test\\src\\app\\ACSSCompiler.service.ts"],"names":[],"mappings":";;;AAKA,OAAM,MAAO,mBAAP,CAA0B;AAI9B,EAAA,WAAA,CACU,IADV,EAEE,eAFF,EAEmC;AADzB,SAAA,IAAA,GAAA,IAAA;AAGR,SAAK,MAAL,GAAc,eAAe,CAAC,cAAhB,CAA+B,IAA/B,EAAqC,IAArC,CAAd;AACD;;AAEK,EAAA,QAAQ,CAAC,OAAD,EAAe,QAAf,EAA+B;AAAA;;AAAA;AAC3C,UAAI,IAAI,SAAS,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,QAAQ,GAAG,OAAzB,EAAkC;AAAC,QAAA,YAAY,EAAE;AAAf,OAAlC,EAA0D,SAA1D,EAAjB;AACA,UAAI,OAAO,GAAG,CAAd;AACA,UAAG,IAAI,CAAC,SAAL,CAAe,IAAI,CAAC,MAAL,GAAc,CAA7B,EAAgC,IAAI,CAAC,MAArC,EAA6C,UAA7C,CAAwD,CAAxD,KAA8D,EAAjE,EAAqE,IAAI,IAAI,IAAR;AACrE,UAAG,IAAI,CAAC,MAAL,IAAe,CAAlB,EAAqB;;AACrB,YAAM,MAAM,GAAG,KAAI,CAAC,SAAL,CAAe,IAAf,CAAf;;AACA,MAAA,MAAM,CAAC,OAAP,CAAe,CAAC,IAAG;AACjB,cAAM,KAAK,GAAG,CAAC,CAAC,KAAF,CAAQ,IAAR,EAAc,MAAd,CAAqB,CAAC,IAAI,CAAC,CAAC,MAAF,GAAW,CAAX,IAAgB,CAAC,CAAC,UAAF,CAAa,CAAb,KAAmB,EAA7D,CAAd;AACA,QAAA,KAAK,CAAC,OAAN,CAAc,CAAC,IAAG;AAChB,cAAG,CAAC,CAAC,QAAF,CAAW,OAAX,CAAH,EAAuB;AACrB,kBAAM,QAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,CAAZ,EAAe,CAAC,CAAC,OAAF,CAAU,OAAV,CAAf,EAAmC,IAAnC,EAAjB;AACA,kBAAM,UAAU,GAAG,QAAQ,CAAC,KAAT,CAAe,EAAf,EAAmB,MAAnB,CAA0B,CAAC,IAAI,CAAC,IAAI,GAAL,IAAY,CAAC,IAAI,GAAjB,IAAwB,CAAC,IAAI,GAA5D,EAAiE,IAAjE,CAAsE,EAAtE,CAAnB;;AACA,gBAAG,UAAU,CAAC,MAAX,GAAoB,CAAvB,EAAyB;AACvB,oBAAM,IAAI,KAAJ,CAAU,GAAG,QAAQ,0BAArB,CAAN;AACD,aAFD,MAEK;AACH,oBAAM,eAAe,GAAG,QAAQ,CAAC,OAAT,CAAiB,UAAjB,EAA6B,EAA7B,CAAxB;;AACA,kBAAG,UAAU,IAAI,GAAjB,EAAqB;AACnB,oBAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,QAArB,CAA8B,eAA9B,CAAH,EAAkD;AAChD,wBAAM,YAAY,GAAG,CAAC,CAAC,KAAF,CAAQ,GAAR,CAArB;;AACA,sBAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAAhB,GAAuB,MAAvB,IAAiC,YAAY,CAAC,CAAD,CAAZ,CAAgB,MAAjD,IAA2D,OAAO,IAAI,CAAzE,EAA2E;AACzE,oBAAA,OAAO,GAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,MAAhB,GAAyB,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAAhB,GAAuB,MAA1D;AACD;;AACD,wBAAM,IAAI,GAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,MAAhB,GAAyB,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAAhB,GAAuB,MAAhD,IAA0D,CAA1D,GACb,CAAC,YAAY,CAAC,CAAD,CAAZ,CAAgB,MAAhB,GAAyB,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAAhB,GAAuB,MAAjD,IAA2D,OAD9C,GACwD,CADrE;;AAEA,sBAAG,CAAC,CAAC,IAAL,EAAU;AACR,wBAAG,IAAI,GAAG,CAAP,IAAY,CAAf,EAAiB;AACf,4BAAM,QAAQ,GAAG,CAAC,YAAY,CAAC,CAAD,CAAZ,CAAgB,QAAhB,CAAyB,MAAzB,CAAD,GACjB,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAAhB,EADiB,GAEjB,EAFA;AAGA,4BAAM,KAAK,GAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,MAAhB,GAAyB,CAAzB,GACd,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAAhB,EADc,GAEd,EAFA;;AAGA,0BAAG,QAAQ,IAAI,KAAf,EAAqB;AACnB,8BAAM,EAAE,GAAG,OAAO,CAAC,eAAD,CAAP,CAAyB,aAApC;;AACA,4BAAG,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,KAAf,EAAsB,QAAtB,CAA+B,QAA/B,CAAH,EAA4C;AAC1C,0BAAA,EAAE,CAAC,KAAH,CAAS,QAAT,IAAqB,KAArB;AACD;AACF;;AACD,0BAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,QAAhB,CAAyB,MAAzB,CAAH,EAAoC;AAClC,wBAAA,OAAO,CAAC,GAAR,CAAY,YAAY,CAAC,CAAD,CAAxB;AACD;AACF,qBAhBD,MAgBK;AACH,sBAAA,OAAO,CAAC,GAAR,CAAY,YAAZ;AACD;AACF;AACF,iBA5BD,MA4BK;AACH,wBAAM,IAAI,KAAJ,CAAU,GAAG,eAAe,2BAA5B,CAAN;AACD;AACF,eAhCD,MAgCK,CAEJ;AACF;AACF;AACF,SA7CD;AA8CD,OAhDD;AAiDA,aAAO,EAAP;AAvD2C;AAwD5C;;AAEO,EAAA,SAAS,CAAC,IAAD,EAAa;AAC5B,UAAM,MAAM,GAAG,EAAf;AACA,QAAI,KAAK,GAAG,CAAZ;AACA,QAAI,IAAI,GAAG,CAAX,CAH4B,CAI5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAM,GAAG,GAAyB,EAAlC;AACA,QAAI,OAAO,GAAG,CAAd;AACA,QAAI,OAAO,GAAG,EAAd;AACA,IAAA,IAAI,CAAC,KAAL,CAAW,IAAX,EAAiB,OAAjB,CAAyB,CAAC,IAAG;AAC3B,UAAG,CAAC,CAAC,QAAF,CAAW,OAAX,CAAH,EAAuB;AACrB,QAAA,CAAC,GAAG,CAAC,CAAC,KAAF,CAAQ,EAAR,EAAY,GAAZ,CAAgB,CAAC,IAAI,CAAC,CAAC,UAAF,CAAa,CAAb,CAArB,EAAsC,MAAtC,CAA6C,CAAC,IAAI,CAAC,IAAI,EAAvD,EAA2D,GAA3D,CAA+D,CAAC,IAAI,MAAM,CAAC,YAAP,CAAoB,CAApB,CAApE,EAA4F,IAA5F,CAAiG,EAAjG,CAAJ;AACA,cAAM,QAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,CAAZ,EAAe,CAAC,CAAC,OAAF,CAAU,OAAV,CAAf,CAAjB;AACA,QAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,EAAhB;AACA,YAAG,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,IAAF,GAAS,MAArB,IAA+B,OAAO,IAAI,CAA7C,EAAgD,OAAO,GAAI,CAAC,CAAC,MAAF,GAAW,CAAZ,GAAiB,CAAC,CAAC,IAAF,GAAS,MAApC;;AAChD,YAAG,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,IAAF,GAAS,MAAxB,EAA+B;AAC7B,UAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACA,gBAAM,YAAY,GAAG,CAAC,CAAC,KAAF,CAAQ,GAAR,EAAa,GAAb,CAAiB,CAAC,IAAI,CAAC,CAAC,IAAF,EAAtB,CAArB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,YAAZ;AACA,gBAAM,MAAM,GAAyB,EAArC;AACA,UAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,EAAnB;;AACA,cAAG,CAAC,CAAC,YAAY,CAAC,CAAD,CAAjB,EAAqB;AACnB,YAAA,GAAG,CAAC,OAAD,CAAH,CAAa,YAAY,CAAC,CAAD,CAAzB,IAAgC,YAAY,CAAC,CAAD,CAA5C;AACD;AACF;;AACD,QAAA,OAAO,GAAG,QAAV;AACD,OAhBD,MAgBK;AACH,cAAM,YAAY,GAAG,CAAC,CAAC,KAAF,CAAQ,GAAR,EAAa,GAAb,CAAiB,CAAC,IAAI,CAAC,CAAC,IAAF,EAAtB,CAArB;AACA,cAAM,MAAM,GAAyB,EAArC;;AACA,YAAG,CAAC,CAAC,YAAY,CAAC,CAAD,CAAjB,EAAqB;AACnB,UAAA,MAAM,CAAC,YAAY,CAAC,CAAD,CAAb,CAAN,GAA0B,YAAY,CAAC,CAAD,CAAtC;AACA,UAAA,GAAG,CAAC,OAAD,CAAH,GAAY,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,GAAG,CAAC,OAAD,CAAV,CAAA,EAAwB,MAAxB,CAAZ;AACD;AACF;AACF,KAzBD;AA0BA,IAAA,OAAO,CAAC,GAAR,CAAY,GAAZ,EAxC4B,CAyC5B;AACA;AACA;;AACA,WAAO,CAAC,EAAD,CAAP,CA5C4B,CA6C5B;AACD;;AAnH6B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,C;AAAA,C;;;SAAnB,mB;AAAmB,EAAA,OAAA,EAAnB,mBAAmB,CAAA,I;AAAA,EAAA,UAAA,EADP","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { CssSelector } from '@angular/compiler';\r\nimport { Injectable, Renderer2, RendererFactory2 } from \"@angular/core\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TCSSCompilerService{\r\n\r\n  private render: Renderer2\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    rendererFactory: RendererFactory2\r\n  ){\r\n    this.render = rendererFactory.createRenderer(null, null)\r\n  }\r\n\r\n  async setStyle(context: any, filePath: string){\r\n    let text = await this.http.get(filePath + '.acss', {responseType: 'text'}).toPromise()\r\n    let tabSize = 0\r\n    if(text.substring(text.length - 1, text.length).charCodeAt(0) != 13) text += '\\n'\r\n    if(text.length == 0) return\r\n    const blocks = this.getBlocks(text)\r\n    blocks.forEach(b => {\r\n      const lines = b.split('\\n').filter(e => e.length > 0 && e.charCodeAt(0) != 13)\r\n      lines.forEach(l => {\r\n        if(b.includes(' use:')){\r\n          const selector = b.substring(0, b.indexOf(' use:')).trim()\r\n          const identifier = selector.split('').filter(e => e == '$' || e == '.' || e == '#').join('')\r\n          if(identifier.length > 1){\r\n            throw new Error(`${selector} is not a valid selector`)\r\n          }else{\r\n            const trimmedSelector = selector.replace(identifier, '')\r\n            if(identifier == '$'){\r\n              if(Object.keys(context).includes(trimmedSelector)){\r\n                const instructions = l.split(':')\r\n                if(instructions[0].trim().length != instructions[0].length && tabSize == 0){\r\n                  tabSize = instructions[0].length - instructions[0].trim().length\r\n                }\r\n                const tabs = instructions[0].length - instructions[0].trim().length != 0 ?\r\n                (instructions[0].length - instructions[0].trim().length) / tabSize : 0\r\n                if(!!tabs){\r\n                  if(tabs % 2 != 0){\r\n                    const atribute = !instructions[0].includes(' use') ?\r\n                    instructions[0].trim() :\r\n                    ''\r\n                    const value = instructions[1].length > 1 ?\r\n                    instructions[1].trim() :\r\n                    ''\r\n                    if(atribute && value){\r\n                      const el = context[trimmedSelector].nativeElement\r\n                      if(Object.keys(el.style).includes(atribute)){\r\n                        el.style[atribute] = value\r\n                      }\r\n                    }\r\n                    if(instructions[0].includes(' use')){\r\n                      console.log(instructions[0])\r\n                    }\r\n                  }else{\r\n                    console.log(instructions)\r\n                  }\r\n                }\r\n              }else{\r\n                throw new Error(`${trimmedSelector} is not a valid ViewChild`)\r\n              }\r\n            }else{\r\n\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return ''\r\n  }\r\n\r\n  private getBlocks(text: string): string[]{\r\n    const blocks = []\r\n    let index = 0\r\n    let safe = 0\r\n    // while (text.length > 0 && safe < 10_000_000) {\r\n    //   if(blocks[index] == undefined) blocks[index] = ''\r\n    //   blocks[index] += text.substring(0, text.indexOf('\\n') + 1)\r\n    //   text = text.replace(text.substring(0, text.indexOf('\\n') + 1), '')\r\n    //   if(text.substring(0, 1).charCodeAt(0) == 13) index++\r\n    //   safe++\r\n    // }\r\n    const obj: {[key: string]: any} = {}\r\n    let tabSize = 0\r\n    let lastKey = ''\r\n    text.split('\\n').forEach(l => {\r\n      if(l.includes(' use:')){\r\n        l = l.split('').map(e => e.charCodeAt(0)).filter(e => e != 13).map(e => String.fromCharCode(e)).join('')\r\n        const selector = l.substring(0, l.indexOf(' use:'))\r\n        obj[selector] = {}\r\n        if(l.length != l.trim().length && tabSize == 0) tabSize = (l.length - 1) - l.trim().length\r\n        if(l.length != l.trim().length){          \r\n          console.log(lastKey)\r\n          const instructions = l.split(':').map(e => e.trim())\r\n          console.log(instructions)\r\n          const preObj: {[key: string]: any} = {}\r\n          preObj[selector] = {}\r\n          if(!!instructions[0]){\r\n            obj[lastKey][instructions[0]] = instructions[1]\r\n          }\r\n        }\r\n        lastKey = selector\r\n      }else{\r\n        const instructions = l.split(':').map(e => e.trim())\r\n        const preObj: {[key: string]: any} = {}\r\n        if(!!instructions[0]){\r\n          preObj[instructions[0]] = instructions[1]\r\n          obj[lastKey] = {...obj[lastKey], ...preObj}\r\n        }\r\n      }\r\n    })\r\n    console.log(obj)\r\n    // console.log(blocks.forEach(e => {\r\n    //   console.log(e.lastIndexOf(' use') != e.indexOf(' use'))\r\n    // }))\r\n    return ['']\r\n    // return blocks\r\n  }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}